# Generated by Django 4.2.23 on 2025-07-13 06:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("reports", "0084_storytemplate_post_publish_command"),
    ]

    operations = [
        migrations.AddField(
            model_name="storytemplate",
            name="summary",
            field=models.TextField(
                blank=True,
                help_text="Summary of the story template. This is used to provide a brief overview of the story.",
            ),
        ),
        migrations.CreateModel(
            name="StoryTemplateTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the table.", max_length=255),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Description of the table."),
                ),
                (
                    "settings",
                    models.JSONField(
                        default=dict,
                        help_text="Settings for the table, e.g., {'type': 'bar', 'x': 'date', 'y': 'value'}. This can include any settings required by the graphic library used.",
                    ),
                ),
                (
                    "sql_command",
                    models.TextField(
                        help_text="SQL command to get the data for the table, e.g., 'SELECT date, value FROM weather_data WHERE date >= %s AND date <= %s'.",
                        max_length=4000,
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(
                        default=0,
                        help_text="Sort order of the table within the story template.",
                    ),
                ),
                (
                    "story_template",
                    models.ForeignKey(
                        help_text="The story template this table belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tables",
                        to="reports.storytemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Story Table",
                "verbose_name_plural": "Story Tables",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="StoryTemplateGraphic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the graphic.", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the graphic."
                    ),
                ),
                (
                    "settings",
                    models.JSONField(
                        default=dict,
                        help_text="Settings for the graphic, e.g., {'type': 'bar', 'x': 'date', 'y': 'value'}. This can include any settings required by the graphic library used.",
                    ),
                ),
                (
                    "sql_command",
                    models.TextField(
                        help_text="SQL command to get the data for the graphic, e.g., 'SELECT date, value FROM weather_data WHERE date >= %s AND date <= %s'. This command should return the data in a format suitable for the graphic library used.",
                        max_length=4000,
                    ),
                ),
                (
                    "graphic_type",
                    models.CharField(
                        choices=[
                            ("bar", "Bar Chart"),
                            ("line", "Line Chart"),
                            ("scatter", "Scatter Plot"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(
                        default=0,
                        help_text="Sort order of the graphic within the story template.",
                    ),
                ),
                (
                    "preview_image",
                    models.ImageField(
                        blank=True,
                        help_text="Preview image for the graphic.",
                        null=True,
                        upload_to="graphics/previews/",
                    ),
                ),
                (
                    "story_template",
                    models.ForeignKey(
                        help_text="The story template this graphic belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="graphics",
                        to="reports.storytemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Story Graphic",
                "verbose_name_plural": "Story Graphics",
                "ordering": ["sort_order"],
            },
        ),
    ]

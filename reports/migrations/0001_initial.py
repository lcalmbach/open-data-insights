# Generated by Django 4.2.21 on 2025-05-23 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LookupCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the lookup category.", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the lookup category."
                    ),
                ),
            ],
            options={
                "verbose_name": "Lookup Category",
                "verbose_name_plural": "Lookup Categories",
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the report was created.",
                    ),
                ),
                (
                    "reference_date",
                    models.DateField(help_text="The date the report refers to."),
                ),
                (
                    "prompt_text",
                    models.TextField(
                        help_text="The prompt used to generate the story."
                    ),
                ),
                (
                    "json_payload",
                    models.JSONField(
                        help_text="The JSON data used for report generation."
                    ),
                ),
                (
                    "station_name",
                    models.CharField(
                        default="NBCN Binningen",
                        help_text="Name of the data source or station.",
                        max_length=255,
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        default="daily",
                        help_text="Type of the report (e.g., daily, weekly).",
                        max_length=50,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", help_text="Language of the report.", max_length=10
                    ),
                ),
            ],
            options={
                "verbose_name": "Report",
                "verbose_name_plural": "Reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Story",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the story.", max_length=255),
                ),
                (
                    "published_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the story was published.",
                    ),
                ),
                (
                    "prompt_text",
                    models.TextField(
                        help_text="The prompt used to generate the story."
                    ),
                ),
                (
                    "ai_model",
                    models.CharField(
                        help_text="AI model used for generating the story.",
                        max_length=50,
                    ),
                ),
                (
                    "reference_period",
                    models.CharField(
                        help_text="Reference period foHINT: Update the relr the story.",
                        max_length=255,
                    ),
                ),
                ("content", models.TextField(help_text="Content of the story.")),
            ],
        ),
        migrations.CreateModel(
            name="StoryRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.IntegerField(help_text="Rating given to the story.")),
                (
                    "create_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the rating was created.",
                    ),
                ),
                (
                    "rating_text",
                    models.TextField(
                        blank=True, help_text="Optional feedback for the story."
                    ),
                ),
                (
                    "story",
                    models.ForeignKey(
                        help_text="The story being rated.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="reports.story",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who rated the story.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="story_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Story Rating",
                "verbose_name_plural": "Story Ratings",
            },
        ),
        migrations.CreateModel(
            name="StoryFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_text",
                    models.TextField(help_text="Feedback for the story."),
                ),
                (
                    "create_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the feedback was created.",
                    ),
                ),
                (
                    "story",
                    models.ForeignKey(
                        help_text="The story being rated.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to="reports.story",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who provided feedback.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="story_feedbacks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Story Feedback",
                "verbose_name_plural": "Story Feedbacks",
            },
        ),
        migrations.CreateModel(
            name="LookupValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="The actual lookup value.", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the lookup value."
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="The category this value belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="reports.lookupcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lookup Value",
                "verbose_name_plural": "Lookup Values",
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[],
            options={
                "verbose_name": "Theme",
                "verbose_name_plural": "Themes",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("reports.lookupvalue",),
        ),
    ]
